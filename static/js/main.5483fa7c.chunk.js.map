{"version":3,"sources":["components/habit.jsx","components/habitAddForm.jsx","components/habits.jsx","components/Navbar.jsx","app.jsx","index.js"],"names":["Habit","state","count","handleIncrement","event","props","onIncrement","habit","handleDecrement","onDecrement","handleDelete","onDelete","this","name","className","onClick","PureComponent","HabitAddForm","memo","inputRef","React","createRef","formRef","ref","onSubmit","preventDefault","current","value","onAdd","reset","type","placeholder","Habits","handleAdd","habits","map","id","onReset","Component","Navbar","totalCount","App","index","indexOf","setState","filter","item","console","log","Date","now","handleReset","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5483fa7c.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\n\r\nclass Habit extends PureComponent {\r\n    state = {\r\n        count: 0,\r\n    };\r\n    handleIncrement = (event) => {\r\n        this.props.onIncrement(this.props.habit);\r\n    }\r\n    handleDecrement = (event) => {\r\n        this.props.onDecrement(this.props.habit);\r\n    }\r\n    handleDelete = (event) => {\r\n        this.props.onDelete(this.props.habit);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { name, count } = this.props.habit;\r\n        // console.log(this.props.habit);\r\n        return (\r\n            <>\r\n                <li className=\"habit\">\r\n                    <span className=\"habit-name\">{name}</span>\r\n                    <span className=\"habit-count\">{count}</span>\r\n                    <button className=\"habit-button habit-increase\" onClick={this.handleIncrement}>\r\n                        <i className=\"fas fa-plus-square\"></i>\r\n                    </button>\r\n                    <button className=\"habit-button habit-decrease\" onClick={this.handleDecrement}>\r\n                        <i className=\"fas fa-minus-square\"></i>\r\n                    </button>\r\n                    <button className=\"habit-button habit-delete\" onClick={this.handleDelete}>\r\n                        <i className=\"fas fa-trash\"></i>\r\n                    </button>\r\n                </li>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Habit;\r\n","import React, { memo } from 'react';\r\n\r\nconst HabitAddForm = memo(props => {\r\n    const inputRef = React.createRef();\r\n    const formRef = React.createRef();\r\n\r\n    const onSubmit = event => {\r\n        event.preventDefault();\r\n        const name = inputRef.current.value;\r\n        name && props.onAdd(name);\r\n        formRef.current.reset();\r\n    };\r\n\r\n    return (\r\n        <form\r\n            ref={formRef} className=\"add-form\" onSubmit={onSubmit}>\r\n            <input\r\n                ref={inputRef}\r\n                type=\"text\"\r\n                className=\"add-input\"\r\n                placeholder=\"Write Your Habit\" />\r\n            <button className=\"add-button\">Add</button>\r\n        </form>\r\n    );\r\n})\r\n\r\nexport default HabitAddForm;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Habit from './habit';\r\nimport HabitAddForm from './habitAddForm';\r\n\r\nclass Habits extends Component {\r\n    handleIncrement = habit => {\r\n        this.props.onIncrement(habit); //habit에서 받아온 handleIncrement가 있다. \r\n    }\r\n    handleDecrement = habit => {\r\n        this.props.onDecrement(habit);\r\n    }\r\n    handleDelete = habit => {\r\n        this.props.onDelete(habit);\r\n    }\r\n\r\n    handleAdd = name => {\r\n        this.props.onAdd(name); //직접만듬. \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <HabitAddForm onAdd={this.handleAdd} />\r\n                <ul>\r\n                    {this.props.habits.map(habit =>\r\n                        <Habit\r\n                            key={habit.id}\r\n                            habit={habit}\r\n                            onIncrement={this.handleIncrement}\r\n                            onDecrement={this.handleDecrement}\r\n                            onDelete={this.handleDelete}\r\n                        />\r\n                    )}\r\n                </ul>\r\n                <button className=\"habits-reset\" onClick={this.props.onReset}>\r\n                    Reset All\r\n                </button>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Habits;","import React, { Component } from 'react';\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar\">\r\n                <i className=\"navbar-logo fas fa-leaf\"></i>\r\n                <span>Habit Tracker</span>\r\n                <span className=\"navbar-count\">{this.props.totalCount}</span>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n\r\n","import React, { Component } from 'react';\nimport Habits from './components/habits';\nimport './app.css';\nimport Navbar from './components/Navbar';\n\nclass App extends Component {\n  state = {\n    habits: [\n      { id: 1, name: 'Reading', count: 0 },  //기본값 준비\n      { id: 2, name: 'Running', count: 0 },\n      { id: 3, name: 'Coding', count: 0 },\n    ],\n  }\n  handleIncrement = habit => {\n    // console.log(`handleIncrement ${habit.name}`);\n    const habits = [...this.state.habits]; //spread연산자로 habit데이터 복사해준다. \n    const index = habits.indexOf(habit); //indexOf=배열에서 지정된 요소를 찾을수 있는 첫번째 인덱스를 반환\n    habits[index].count++;\n    this.setState(habits); //데이터 변환시 사용. setState\n  }\n  handleDecrement = habit => {\n    // console.log(`handleDecrement ${habit.name}`);\n    const habits = [...this.state.habits];\n    const index = habits.indexOf(habit);\n    const count = habits[index].count - 1;\n    habits[index].count = count < 0 ? 0 : count;\n    this.setState(habits);\n  }\n  handleDelete = habit => {\n    // console.log(`handleDelete ${habit.name}`);\n    const habits = this.state.habits.filter(item => item.id !== habit.id); //filter=주어진 함수의 테스트를 통과하는 모든 요소를 모아 새로운 배열로 반환.\n    this.setState({ habits });\n    console.log(habits);\n  }\n  handleAdd = name => {\n    const habits = [...this.state.habits, { id: Date.now(), name, count: 0 }];\n    console.log(habits);\n    this.setState({ habits });\n  }\n\n  handleReset = () => {\n    const habits = this.state.habits.map(habit => {\n      habit.count = 0;\n      return habit;\n    });\n    this.setState({ habits });\n  }\n\n  render() {\n    return (\n      <>\n        <Navbar\n          totalCount={this.state.habits.filter(item => item.count > 0).length}\n        />\n        <Habits\n          habits={this.state.habits}\n          onIncrement={this.handleIncrement}\n          onDecrement={this.handleDecrement}\n          onDelete={this.handleDelete}\n          onAdd={this.handleAdd}\n          onReset={this.handleReset}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport '@fortawesome/fontawesome-free/js/all'\n// import SimpleHabit from './components/simpleHabit';\n\nReactDOM.render(\n  <React.StrictMode> {/* 콘솔이 두번씩 출력된다. 검사의 목적 */}\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}